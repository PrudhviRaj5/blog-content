{"version":3,"file":"js/npm.material.bundle.js","sources":["webpack:///../node_modules/@material/drawer/dist/mdc.drawer.js"],"sourcesContent":["/*!\n Material Components for the Web\n Copyright (c) 2019 Google Inc.\n License: MIT\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drawer\"] = factory();\n\telse\n\t\troot[\"mdc\"] = root[\"mdc\"] || {}, root[\"mdc\"][\"drawer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 120);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MDCFoundation = /** @class */function () {\n    function MDCFoundation(adapter) {\n        if (adapter === void 0) {\n            adapter = {};\n        }\n        this.adapter_ = adapter;\n    }\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\n        get: function get() {\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"strings\", {\n        get: function get() {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"numbers\", {\n        get: function get() {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n        get: function get() {\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n            // validation.\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCFoundation.prototype.init = function () {\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    };\n    MDCFoundation.prototype.destroy = function () {\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    };\n    return MDCFoundation;\n}();\nexports.MDCFoundation = MDCFoundation;\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexports.default = MDCFoundation;\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __read = this && this.__read || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n        r,\n        ar = [],\n        e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n            ar.push(r.value);\n        }\n    } catch (error) {\n        e = { error: error };\n    } finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally {\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\nvar __spread = this && this.__spread || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) {\n        ar = ar.concat(__read(arguments[i]));\n    }return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar foundation_1 = __webpack_require__(0);\nvar MDCComponent = /** @class */function () {\n    function MDCComponent(root, foundation) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        this.root_ = root;\n        this.initialize.apply(this, __spread(args));\n        // Note that we initialize foundation here and not within the constructor's default param so that\n        // this.root_ is defined and can be used within the foundation class.\n        this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n        this.foundation_.init();\n        this.initialSyncWithDOM();\n    }\n    MDCComponent.attachTo = function (root) {\n        // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n        // returns an instantiated component with its root set to that element. Also note that in the cases of\n        // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n        // from getDefaultFoundation().\n        return new MDCComponent(root, new foundation_1.MDCFoundation({}));\n    };\n    /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */\n    MDCComponent.prototype.initialize = function () {\n        var _args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _args[_i] = arguments[_i];\n        }\n        // Subclasses can override this to do any additional setup work that would be considered part of a\n        // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n        // initialized. Any additional arguments besides root and foundation will be passed in here.\n    };\n    MDCComponent.prototype.getDefaultFoundation = function () {\n        // Subclasses must override this method to return a properly configured foundation class for the\n        // component.\n        throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n    };\n    MDCComponent.prototype.initialSyncWithDOM = function () {\n        // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n        // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n        // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n        // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n    };\n    MDCComponent.prototype.destroy = function () {\n        // Subclasses may implement this method to release any resources / deregister any listeners they have\n        // attached. An example of this might be deregistering a resize event from the window object.\n        this.foundation_.destroy();\n    };\n    MDCComponent.prototype.listen = function (evtType, handler) {\n        this.root_.addEventListener(evtType, handler);\n    };\n    MDCComponent.prototype.unlisten = function (evtType, handler) {\n        this.root_.removeEventListener(evtType, handler);\n    };\n    /**\n     * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n     */\n    MDCComponent.prototype.emit = function (evtType, evtData, shouldBubble) {\n        if (shouldBubble === void 0) {\n            shouldBubble = false;\n        }\n        var evt;\n        if (typeof CustomEvent === 'function') {\n            evt = new CustomEvent(evtType, {\n                bubbles: shouldBubble,\n                detail: evtData\n            });\n        } else {\n            evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n        }\n        this.root_.dispatchEvent(evt);\n    };\n    return MDCComponent;\n}();\nexports.MDCComponent = MDCComponent;\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexports.default = MDCComponent;\n\n/***/ }),\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __extends = this && this.__extends || function () {\n    var _extendStatics = function extendStatics(d, b) {\n        _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n        } || function (d, b) {\n            for (var p in b) {\n                if (b.hasOwnProperty(p)) d[p] = b[p];\n            }\n        };\n        return _extendStatics(d, b);\n    };\n    return function (d, b) {\n        _extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = this && this.__assign || function () {\n    __assign = Object.assign || function (t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) {\n                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar foundation_1 = __webpack_require__(0);\nvar constants_1 = __webpack_require__(15);\nvar ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\nfunction isNumberArray(selectedIndex) {\n    return selectedIndex instanceof Array;\n}\nvar MDCListFoundation = /** @class */function (_super) {\n    __extends(MDCListFoundation, _super);\n    function MDCListFoundation(adapter) {\n        var _this = _super.call(this, __assign({}, MDCListFoundation.defaultAdapter, adapter)) || this;\n        _this.wrapFocus_ = false;\n        _this.isVertical_ = true;\n        _this.isSingleSelectionList_ = false;\n        _this.selectedIndex_ = constants_1.numbers.UNSET_INDEX;\n        _this.focusedItemIndex_ = constants_1.numbers.UNSET_INDEX;\n        _this.useActivatedClass_ = false;\n        _this.ariaCurrentAttrValue_ = null;\n        _this.isCheckboxList_ = false;\n        _this.isRadioList_ = false;\n        return _this;\n    }\n    Object.defineProperty(MDCListFoundation, \"strings\", {\n        get: function get() {\n            return constants_1.strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"cssClasses\", {\n        get: function get() {\n            return constants_1.cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"numbers\", {\n        get: function get() {\n            return constants_1.numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"defaultAdapter\", {\n        get: function get() {\n            return {\n                addClassForElementIndex: function addClassForElementIndex() {\n                    return undefined;\n                },\n                focusItemAtIndex: function focusItemAtIndex() {\n                    return undefined;\n                },\n                getAttributeForElementIndex: function getAttributeForElementIndex() {\n                    return null;\n                },\n                getFocusedElementIndex: function getFocusedElementIndex() {\n                    return 0;\n                },\n                getListItemCount: function getListItemCount() {\n                    return 0;\n                },\n                hasCheckboxAtIndex: function hasCheckboxAtIndex() {\n                    return false;\n                },\n                hasRadioAtIndex: function hasRadioAtIndex() {\n                    return false;\n                },\n                isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex() {\n                    return false;\n                },\n                isFocusInsideList: function isFocusInsideList() {\n                    return false;\n                },\n                notifyAction: function notifyAction() {\n                    return undefined;\n                },\n                removeClassForElementIndex: function removeClassForElementIndex() {\n                    return undefined;\n                },\n                setAttributeForElementIndex: function setAttributeForElementIndex() {\n                    return undefined;\n                },\n                setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex() {\n                    return undefined;\n                },\n                setTabIndexForListItemChildren: function setTabIndexForListItemChildren() {\n                    return undefined;\n                }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCListFoundation.prototype.layout = function () {\n        if (this.adapter_.getListItemCount() === 0) {\n            return;\n        }\n        if (this.adapter_.hasCheckboxAtIndex(0)) {\n            this.isCheckboxList_ = true;\n        } else if (this.adapter_.hasRadioAtIndex(0)) {\n            this.isRadioList_ = true;\n        }\n    };\n    /**\n     * Sets the private wrapFocus_ variable.\n     */\n    MDCListFoundation.prototype.setWrapFocus = function (value) {\n        this.wrapFocus_ = value;\n    };\n    /**\n     * Sets the isVertical_ private variable.\n     */\n    MDCListFoundation.prototype.setVerticalOrientation = function (value) {\n        this.isVertical_ = value;\n    };\n    /**\n     * Sets the isSingleSelectionList_ private variable.\n     */\n    MDCListFoundation.prototype.setSingleSelection = function (value) {\n        this.isSingleSelectionList_ = value;\n    };\n    /**\n     * Sets the useActivatedClass_ private variable.\n     */\n    MDCListFoundation.prototype.setUseActivatedClass = function (useActivated) {\n        this.useActivatedClass_ = useActivated;\n    };\n    MDCListFoundation.prototype.getSelectedIndex = function () {\n        return this.selectedIndex_;\n    };\n    MDCListFoundation.prototype.setSelectedIndex = function (index) {\n        if (!this.isIndexValid_(index)) {\n            return;\n        }\n        if (this.isCheckboxList_) {\n            this.setCheckboxAtIndex_(index);\n        } else if (this.isRadioList_) {\n            this.setRadioAtIndex_(index);\n        } else {\n            this.setSingleSelectionAtIndex_(index);\n        }\n    };\n    /**\n     * Focus in handler for the list items.\n     */\n    MDCListFoundation.prototype.handleFocusIn = function (_, listItemIndex) {\n        if (listItemIndex >= 0) {\n            this.adapter_.setTabIndexForListItemChildren(listItemIndex, '0');\n        }\n    };\n    /**\n     * Focus out handler for the list items.\n     */\n    MDCListFoundation.prototype.handleFocusOut = function (_, listItemIndex) {\n        var _this = this;\n        if (listItemIndex >= 0) {\n            this.adapter_.setTabIndexForListItemChildren(listItemIndex, '-1');\n        }\n        /**\n         * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus\n         * is moved to next element.\n         */\n        setTimeout(function () {\n            if (!_this.adapter_.isFocusInsideList()) {\n                _this.setTabindexToFirstSelectedItem_();\n            }\n        }, 0);\n    };\n    /**\n     * Key handler for the list.\n     */\n    MDCListFoundation.prototype.handleKeydown = function (evt, isRootListItem, listItemIndex) {\n        var arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n        var arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n        var arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n        var arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n        var isHome = evt.key === 'Home' || evt.keyCode === 36;\n        var isEnd = evt.key === 'End' || evt.keyCode === 35;\n        var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n        var isSpace = evt.key === 'Space' || evt.keyCode === 32;\n        var currentIndex = this.adapter_.getFocusedElementIndex();\n        var nextIndex = constants_1.numbers.UNSET_INDEX;\n        if (currentIndex === constants_1.numbers.UNSET_INDEX) {\n            currentIndex = listItemIndex;\n            if (currentIndex < 0) {\n                // If this event doesn't have a mdc-list-item ancestor from the\n                // current list (not from a sublist), return early.\n                return;\n            }\n        }\n        if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {\n            this.preventDefaultEvent_(evt);\n            nextIndex = this.focusNextElement(currentIndex);\n        } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {\n            this.preventDefaultEvent_(evt);\n            nextIndex = this.focusPrevElement(currentIndex);\n        } else if (isHome) {\n            this.preventDefaultEvent_(evt);\n            nextIndex = this.focusFirstElement();\n        } else if (isEnd) {\n            this.preventDefaultEvent_(evt);\n            nextIndex = this.focusLastElement();\n        } else if (isEnter || isSpace) {\n            if (isRootListItem) {\n                // Return early if enter key is pressed on anchor element which triggers synthetic MouseEvent event.\n                var target = evt.target;\n                if (target && target.tagName === 'A' && isEnter) {\n                    return;\n                }\n                this.preventDefaultEvent_(evt);\n                if (this.isSelectableList_()) {\n                    this.setSelectedIndexOnAction_(currentIndex);\n                }\n                this.adapter_.notifyAction(currentIndex);\n            }\n        }\n        this.focusedItemIndex_ = currentIndex;\n        if (nextIndex >= 0) {\n            this.setTabindexAtIndex_(nextIndex);\n            this.focusedItemIndex_ = nextIndex;\n        }\n    };\n    /**\n     * Click handler for the list.\n     */\n    MDCListFoundation.prototype.handleClick = function (index, toggleCheckbox) {\n        if (index === constants_1.numbers.UNSET_INDEX) {\n            return;\n        }\n        if (this.isSelectableList_()) {\n            this.setSelectedIndexOnAction_(index, toggleCheckbox);\n        }\n        this.adapter_.notifyAction(index);\n        this.setTabindexAtIndex_(index);\n        this.focusedItemIndex_ = index;\n    };\n    /**\n     * Focuses the next element on the list.\n     */\n    MDCListFoundation.prototype.focusNextElement = function (index) {\n        var count = this.adapter_.getListItemCount();\n        var nextIndex = index + 1;\n        if (nextIndex >= count) {\n            if (this.wrapFocus_) {\n                nextIndex = 0;\n            } else {\n                // Return early because last item is already focused.\n                return index;\n            }\n        }\n        this.adapter_.focusItemAtIndex(nextIndex);\n        return nextIndex;\n    };\n    /**\n     * Focuses the previous element on the list.\n     */\n    MDCListFoundation.prototype.focusPrevElement = function (index) {\n        var prevIndex = index - 1;\n        if (prevIndex < 0) {\n            if (this.wrapFocus_) {\n                prevIndex = this.adapter_.getListItemCount() - 1;\n            } else {\n                // Return early because first item is already focused.\n                return index;\n            }\n        }\n        this.adapter_.focusItemAtIndex(prevIndex);\n        return prevIndex;\n    };\n    MDCListFoundation.prototype.focusFirstElement = function () {\n        this.adapter_.focusItemAtIndex(0);\n        return 0;\n    };\n    MDCListFoundation.prototype.focusLastElement = function () {\n        var lastIndex = this.adapter_.getListItemCount() - 1;\n        this.adapter_.focusItemAtIndex(lastIndex);\n        return lastIndex;\n    };\n    /**\n     * Ensures that preventDefault is only called if the containing element doesn't\n     * consume the event, and it will cause an unintended scroll.\n     */\n    MDCListFoundation.prototype.preventDefaultEvent_ = function (evt) {\n        var target = evt.target;\n        var tagName = (\"\" + target.tagName).toLowerCase();\n        if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n            evt.preventDefault();\n        }\n    };\n    MDCListFoundation.prototype.setSingleSelectionAtIndex_ = function (index) {\n        if (this.selectedIndex_ === index) {\n            return;\n        }\n        var selectedClassName = constants_1.cssClasses.LIST_ITEM_SELECTED_CLASS;\n        if (this.useActivatedClass_) {\n            selectedClassName = constants_1.cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n        }\n        if (this.selectedIndex_ !== constants_1.numbers.UNSET_INDEX) {\n            this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n        }\n        this.adapter_.addClassForElementIndex(index, selectedClassName);\n        this.setAriaForSingleSelectionAtIndex_(index);\n        this.selectedIndex_ = index;\n    };\n    /**\n     * Sets aria attribute for single selection at given index.\n     */\n    MDCListFoundation.prototype.setAriaForSingleSelectionAtIndex_ = function (index) {\n        // Detect the presence of aria-current and get the value only during list initialization when it is in unset state.\n        if (this.selectedIndex_ === constants_1.numbers.UNSET_INDEX) {\n            this.ariaCurrentAttrValue_ = this.adapter_.getAttributeForElementIndex(index, constants_1.strings.ARIA_CURRENT);\n        }\n        var isAriaCurrent = this.ariaCurrentAttrValue_ !== null;\n        var ariaAttribute = isAriaCurrent ? constants_1.strings.ARIA_CURRENT : constants_1.strings.ARIA_SELECTED;\n        if (this.selectedIndex_ !== constants_1.numbers.UNSET_INDEX) {\n            this.adapter_.setAttributeForElementIndex(this.selectedIndex_, ariaAttribute, 'false');\n        }\n        var ariaAttributeValue = isAriaCurrent ? this.ariaCurrentAttrValue_ : 'true';\n        this.adapter_.setAttributeForElementIndex(index, ariaAttribute, ariaAttributeValue);\n    };\n    /**\n     * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.\n     */\n    MDCListFoundation.prototype.setRadioAtIndex_ = function (index) {\n        this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);\n        if (this.selectedIndex_ !== constants_1.numbers.UNSET_INDEX) {\n            this.adapter_.setAttributeForElementIndex(this.selectedIndex_, constants_1.strings.ARIA_CHECKED, 'false');\n        }\n        this.adapter_.setAttributeForElementIndex(index, constants_1.strings.ARIA_CHECKED, 'true');\n        this.selectedIndex_ = index;\n    };\n    MDCListFoundation.prototype.setCheckboxAtIndex_ = function (index) {\n        for (var i = 0; i < this.adapter_.getListItemCount(); i++) {\n            var isChecked = false;\n            if (index.indexOf(i) >= 0) {\n                isChecked = true;\n            }\n            this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n            this.adapter_.setAttributeForElementIndex(i, constants_1.strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n        }\n        this.selectedIndex_ = index;\n    };\n    MDCListFoundation.prototype.setTabindexAtIndex_ = function (index) {\n        if (this.focusedItemIndex_ === constants_1.numbers.UNSET_INDEX && index !== 0) {\n            // If no list item was selected set first list item's tabindex to -1.\n            // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n            this.adapter_.setAttributeForElementIndex(0, 'tabindex', '-1');\n        } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n            this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', '-1');\n        }\n        this.adapter_.setAttributeForElementIndex(index, 'tabindex', '0');\n    };\n    /**\n     * @return Return true if it is single selectin list, checkbox list or radio list.\n     */\n    MDCListFoundation.prototype.isSelectableList_ = function () {\n        return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;\n    };\n    MDCListFoundation.prototype.setTabindexToFirstSelectedItem_ = function () {\n        var targetIndex = 0;\n        if (this.isSelectableList_()) {\n            if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== constants_1.numbers.UNSET_INDEX) {\n                targetIndex = this.selectedIndex_;\n            } else if (isNumberArray(this.selectedIndex_) && this.selectedIndex_.length > 0) {\n                targetIndex = this.selectedIndex_.reduce(function (currentIndex, minIndex) {\n                    return Math.min(currentIndex, minIndex);\n                });\n            }\n        }\n        this.setTabindexAtIndex_(targetIndex);\n    };\n    MDCListFoundation.prototype.isIndexValid_ = function (index) {\n        var _this = this;\n        if (index instanceof Array) {\n            if (!this.isCheckboxList_) {\n                throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n            }\n            if (index.length === 0) {\n                return true;\n            } else {\n                return index.some(function (i) {\n                    return _this.isIndexInRange_(i);\n                });\n            }\n        } else if (typeof index === 'number') {\n            if (this.isCheckboxList_) {\n                throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);\n            }\n            return this.isIndexInRange_(index);\n        } else {\n            return false;\n        }\n    };\n    MDCListFoundation.prototype.isIndexInRange_ = function (index) {\n        var listSize = this.adapter_.getListItemCount();\n        return index >= 0 && index < listSize;\n    };\n    MDCListFoundation.prototype.setSelectedIndexOnAction_ = function (index, toggleCheckbox) {\n        if (toggleCheckbox === void 0) {\n            toggleCheckbox = true;\n        }\n        if (this.isCheckboxList_) {\n            this.toggleCheckboxAtIndex_(index, toggleCheckbox);\n        } else {\n            this.setSelectedIndex(index);\n        }\n    };\n    MDCListFoundation.prototype.toggleCheckboxAtIndex_ = function (index, toggleCheckbox) {\n        var isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);\n        if (toggleCheckbox) {\n            isChecked = !isChecked;\n            this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n        }\n        this.adapter_.setAttributeForElementIndex(index, constants_1.strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n        // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.\n        var selectedIndexes = this.selectedIndex_ === constants_1.numbers.UNSET_INDEX ? [] : this.selectedIndex_.slice();\n        if (isChecked) {\n            selectedIndexes.push(index);\n        } else {\n            selectedIndexes = selectedIndexes.filter(function (i) {\n                return i !== index;\n            });\n        }\n        this.selectedIndex_ = selectedIndexes;\n    };\n    return MDCListFoundation;\n}(foundation_1.MDCFoundation);\nexports.MDCListFoundation = MDCListFoundation;\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexports.default = MDCListFoundation;\n\n/***/ }),\n\n/***/ 120:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nfunction __export(m) {\n    for (var p in m) {\n        if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n}\nvar __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) {\n        if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __importStar(__webpack_require__(66));\nexports.util = util;\n__export(__webpack_require__(123));\n__export(__webpack_require__(45));\n__export(__webpack_require__(68));\n\n/***/ }),\n\n/***/ 121:\n/***/ (function(module, exports) {\n\nvar candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\nvar candidateSelector = candidateSelectors.join(',');\n\nvar matches = typeof Element === 'undefined'\n  ? function () {}\n  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nfunction tabbable(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var regularTabbables = [];\n  var orderedTabbables = [];\n\n  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);\n  var candidates = el.querySelectorAll(candidateSelector);\n\n  if (options.includeContainer) {\n    if (matches.call(el, candidateSelector)) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var i, candidate, candidateTabindex;\n  for (i = 0; i < candidates.length; i++) {\n    candidate = candidates[i];\n\n    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;\n\n    candidateTabindex = getTabindex(candidate);\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(sortOrderedTabbables)\n    .map(function(a) { return a.node })\n    .concat(regularTabbables);\n\n  return tabbableNodes;\n}\n\ntabbable.isTabbable = isTabbable;\ntabbable.isFocusable = isFocusable;\n\nfunction isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {\n  if (\n    !isNodeMatchingSelectorFocusable(node, untouchabilityChecker)\n    || isNonTabbableRadio(node)\n    || getTabindex(node) < 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction isTabbable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, candidateSelector) === false) return false;\n  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);\n}\n\nfunction isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {\n  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);\n  if (\n    node.disabled\n    || isHiddenInput(node)\n    || untouchabilityChecker.isUntouchable(node)\n  ) {\n    return false;\n  }\n  return true;\n}\n\nvar focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');\nfunction isFocusable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, focusableCandidateSelector) === false) return false;\n  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);\n}\n\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n}\n\n// Array.prototype.find not available in IE.\nfunction find(list, predicate) {\n  for (var i = 0, length = list.length; i < length; i++) {\n    if (predicate(list[i])) return list[i];\n  }\n}\n\nfunction isContentEditable(node) {\n  return node.contentEditable === 'true';\n}\n\nfunction isInput(node) {\n  return node.tagName === 'INPUT';\n}\n\nfunction isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n}\n\nfunction isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n}\n\nfunction isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n}\n\nfunction getCheckedRadio(nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isTabbableRadio(node) {\n  if (!node.name) return true;\n  // This won't account for the edge case where you have radio groups with the same\n  // in separate forms on the same page.\n  var radioSet = node.ownerDocument.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet);\n  return !checked || checked === node;\n}\n\n// An element is \"untouchable\" if *it or one of its ancestors* has\n// `visibility: hidden` or `display: none`.\nfunction UntouchabilityChecker(elementDocument) {\n  this.doc = elementDocument;\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed. The cache contains tuples\n  // mapping nodes to their boolean result.\n  this.cache = [];\n}\n\n// getComputedStyle accurately reflects `visibility: hidden` of ancestors\n// but not `display: none`, so we need to recursively check parents.\nUntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {\n  if (node.nodeType !== Node.ELEMENT_NODE) return false;\n\n    // Search for a cached result.\n    var cached = find(this.cache, function(item) {\n      return item === node;\n    });\n    if (cached) return cached[1];\n\n    nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = this.hasDisplayNone(node.parentNode);\n    }\n\n    this.cache.push([node, result]);\n\n    return result;\n}\n\nUntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {\n  if (node === this.doc.documentElement) return false;\n  var computedStyle = this.doc.defaultView.getComputedStyle(node);\n  if (this.hasDisplayNone(node, computedStyle)) return true;\n  return computedStyle.visibility === 'hidden';\n}\n\nmodule.exports = tabbable;\n\n\n/***/ }),\n\n/***/ 122:\n/***/ (function(module, exports) {\n\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n/***/ }),\n\n/***/ 123:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __extends = this && this.__extends || function () {\n    var _extendStatics = function extendStatics(d, b) {\n        _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n        } || function (d, b) {\n            for (var p in b) {\n                if (b.hasOwnProperty(p)) d[p] = b[p];\n            }\n        };\n        return _extendStatics(d, b);\n    };\n    return function (d, b) {\n        _extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : { \"default\": mod };\n};\nvar __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) {\n        if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = __webpack_require__(1);\nvar component_2 = __webpack_require__(22);\nvar foundation_1 = __webpack_require__(11);\nvar focus_trap_1 = __importDefault(__webpack_require__(67));\nvar foundation_2 = __webpack_require__(45);\nvar foundation_3 = __webpack_require__(68);\nvar util = __importStar(__webpack_require__(66));\nvar cssClasses = foundation_2.MDCDismissibleDrawerFoundation.cssClasses,\n    strings = foundation_2.MDCDismissibleDrawerFoundation.strings;\nvar MDCDrawer = /** @class */function (_super) {\n    __extends(MDCDrawer, _super);\n    function MDCDrawer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCDrawer.attachTo = function (root) {\n        return new MDCDrawer(root);\n    };\n    Object.defineProperty(MDCDrawer.prototype, \"open\", {\n        /**\n         * Returns true if drawer is in the open position.\n         */\n        get: function get() {\n            return this.foundation_.isOpen();\n        },\n        /**\n         * Toggles the drawer open and closed.\n         */\n        set: function set(isOpen) {\n            if (isOpen) {\n                this.foundation_.open();\n            } else {\n                this.foundation_.close();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDrawer.prototype, \"list\", {\n        get: function get() {\n            return this.list_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCDrawer.prototype.initialize = function (focusTrapFactory, listFactory) {\n        if (focusTrapFactory === void 0) {\n            focusTrapFactory = focus_trap_1.default;\n        }\n        if (listFactory === void 0) {\n            listFactory = function listFactory(el) {\n                return new component_2.MDCList(el);\n            };\n        }\n        var listEl = this.root_.querySelector(\".\" + foundation_1.MDCListFoundation.cssClasses.ROOT);\n        if (listEl) {\n            this.list_ = listFactory(listEl);\n            this.list_.wrapFocus = true;\n        }\n        this.focusTrapFactory_ = focusTrapFactory;\n    };\n    MDCDrawer.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        var MODAL = cssClasses.MODAL;\n        var SCRIM_SELECTOR = strings.SCRIM_SELECTOR;\n        this.scrim_ = this.root_.parentNode.querySelector(SCRIM_SELECTOR);\n        if (this.scrim_ && this.root_.classList.contains(MODAL)) {\n            this.handleScrimClick_ = function () {\n                return _this.foundation_.handleScrimClick();\n            };\n            this.scrim_.addEventListener('click', this.handleScrimClick_);\n            this.focusTrap_ = util.createFocusTrapInstance(this.root_, this.focusTrapFactory_);\n        }\n        this.handleKeydown_ = function (evt) {\n            return _this.foundation_.handleKeydown(evt);\n        };\n        this.handleTransitionEnd_ = function (evt) {\n            return _this.foundation_.handleTransitionEnd(evt);\n        };\n        this.listen('keydown', this.handleKeydown_);\n        this.listen('transitionend', this.handleTransitionEnd_);\n    };\n    MDCDrawer.prototype.destroy = function () {\n        this.unlisten('keydown', this.handleKeydown_);\n        this.unlisten('transitionend', this.handleTransitionEnd_);\n        if (this.list_) {\n            this.list_.destroy();\n        }\n        var MODAL = cssClasses.MODAL;\n        if (this.scrim_ && this.handleScrimClick_ && this.root_.classList.contains(MODAL)) {\n            this.scrim_.removeEventListener('click', this.handleScrimClick_);\n            // Ensure drawer is closed to hide scrim and release focus\n            this.open = false;\n        }\n    };\n    MDCDrawer.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function addClass(className) {\n                return _this.root_.classList.add(className);\n            },\n            removeClass: function removeClass(className) {\n                return _this.root_.classList.remove(className);\n            },\n            hasClass: function hasClass(className) {\n                return _this.root_.classList.contains(className);\n            },\n            elementHasClass: function elementHasClass(element, className) {\n                return element.classList.contains(className);\n            },\n            saveFocus: function saveFocus() {\n                return _this.previousFocus_ = document.activeElement;\n            },\n            restoreFocus: function restoreFocus() {\n                var previousFocus = _this.previousFocus_;\n                if (previousFocus && previousFocus.focus && _this.root_.contains(document.activeElement)) {\n                    previousFocus.focus();\n                }\n            },\n            focusActiveNavigationItem: function focusActiveNavigationItem() {\n                var activeNavItemEl = _this.root_.querySelector(\".\" + foundation_1.MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS);\n                if (activeNavItemEl) {\n                    activeNavItemEl.focus();\n                }\n            },\n            notifyClose: function notifyClose() {\n                return _this.emit(strings.CLOSE_EVENT, {}, true /* shouldBubble */);\n            },\n            notifyOpen: function notifyOpen() {\n                return _this.emit(strings.OPEN_EVENT, {}, true /* shouldBubble */);\n            },\n            trapFocus: function trapFocus() {\n                return _this.focusTrap_.activate();\n            },\n            releaseFocus: function releaseFocus() {\n                return _this.focusTrap_.deactivate();\n            }\n        };\n        // tslint:enable:object-literal-sort-keys\n        var DISMISSIBLE = cssClasses.DISMISSIBLE,\n            MODAL = cssClasses.MODAL;\n        if (this.root_.classList.contains(DISMISSIBLE)) {\n            return new foundation_2.MDCDismissibleDrawerFoundation(adapter);\n        } else if (this.root_.classList.contains(MODAL)) {\n            return new foundation_3.MDCModalDrawerFoundation(adapter);\n        } else {\n            throw new Error(\"MDCDrawer: Failed to instantiate component. Supported variants are \" + DISMISSIBLE + \" and \" + MODAL + \".\");\n        }\n    };\n    return MDCDrawer;\n}(component_1.MDCComponent);\nexports.MDCDrawer = MDCDrawer;\n\n/***/ }),\n\n/***/ 124:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cssClasses = {\n    ANIMATE: 'mdc-drawer--animate',\n    CLOSING: 'mdc-drawer--closing',\n    DISMISSIBLE: 'mdc-drawer--dismissible',\n    MODAL: 'mdc-drawer--modal',\n    OPEN: 'mdc-drawer--open',\n    OPENING: 'mdc-drawer--opening',\n    ROOT: 'mdc-drawer'\n};\nexports.cssClasses = cssClasses;\nvar strings = {\n    APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',\n    CLOSE_EVENT: 'MDCDrawer:closed',\n    OPEN_EVENT: 'MDCDrawer:opened',\n    SCRIM_SELECTOR: '.mdc-drawer-scrim'\n};\nexports.strings = strings;\n\n/***/ }),\n\n/***/ 15:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cssClasses = {\n    LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n    LIST_ITEM_CLASS: 'mdc-list-item',\n    LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n    ROOT: 'mdc-list'\n};\nexports.cssClasses = cssClasses;\nvar strings = {\n    ACTION_EVENT: 'MDCList:action',\n    ARIA_CHECKED: 'aria-checked',\n    ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n    ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n    ARIA_CURRENT: 'aria-current',\n    ARIA_ORIENTATION: 'aria-orientation',\n    ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n    ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n    ARIA_SELECTED: 'aria-selected',\n    CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n    CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n    CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a\\n  \",\n    ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n    FOCUSABLE_CHILD_ELEMENTS: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a,\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"radio\\\"]:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"checkbox\\\"]:not(:disabled)\\n  \",\n    RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)'\n};\nexports.strings = strings;\nvar numbers = {\n    UNSET_INDEX: -1\n};\nexports.numbers = numbers;\n\n/***/ }),\n\n/***/ 22:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __extends = this && this.__extends || function () {\n    var _extendStatics = function extendStatics(d, b) {\n        _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n        } || function (d, b) {\n            for (var p in b) {\n                if (b.hasOwnProperty(p)) d[p] = b[p];\n            }\n        };\n        return _extendStatics(d, b);\n    };\n    return function (d, b) {\n        _extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = __webpack_require__(1);\nvar index_1 = __webpack_require__(3);\nvar constants_1 = __webpack_require__(15);\nvar foundation_1 = __webpack_require__(11);\nvar MDCList = /** @class */function (_super) {\n    __extends(MDCList, _super);\n    function MDCList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCList.prototype, \"vertical\", {\n        set: function set(value) {\n            this.foundation_.setVerticalOrientation(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"listElements\", {\n        get: function get() {\n            return [].slice.call(this.root_.querySelectorAll(constants_1.strings.ENABLED_ITEMS_SELECTOR));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"wrapFocus\", {\n        set: function set(value) {\n            this.foundation_.setWrapFocus(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"singleSelection\", {\n        set: function set(isSingleSelectionList) {\n            this.foundation_.setSingleSelection(isSingleSelectionList);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"selectedIndex\", {\n        get: function get() {\n            return this.foundation_.getSelectedIndex();\n        },\n        set: function set(index) {\n            this.foundation_.setSelectedIndex(index);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCList.attachTo = function (root) {\n        return new MDCList(root);\n    };\n    MDCList.prototype.initialSyncWithDOM = function () {\n        this.handleClick_ = this.handleClickEvent_.bind(this);\n        this.handleKeydown_ = this.handleKeydownEvent_.bind(this);\n        this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);\n        this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);\n        this.listen('keydown', this.handleKeydown_);\n        this.listen('click', this.handleClick_);\n        this.listen('focusin', this.focusInEventListener_);\n        this.listen('focusout', this.focusOutEventListener_);\n        this.layout();\n        this.initializeListType();\n    };\n    MDCList.prototype.destroy = function () {\n        this.unlisten('keydown', this.handleKeydown_);\n        this.unlisten('click', this.handleClick_);\n        this.unlisten('focusin', this.focusInEventListener_);\n        this.unlisten('focusout', this.focusOutEventListener_);\n    };\n    MDCList.prototype.layout = function () {\n        var direction = this.root_.getAttribute(constants_1.strings.ARIA_ORIENTATION);\n        this.vertical = direction !== constants_1.strings.ARIA_ORIENTATION_HORIZONTAL;\n        // List items need to have at least tabindex=-1 to be focusable.\n        [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])')).forEach(function (el) {\n            el.setAttribute('tabindex', '-1');\n        });\n        // Child button/a elements are not tabbable until the list item is focused.\n        [].slice.call(this.root_.querySelectorAll(constants_1.strings.FOCUSABLE_CHILD_ELEMENTS)).forEach(function (el) {\n            return el.setAttribute('tabindex', '-1');\n        });\n        this.foundation_.layout();\n    };\n    /**\n     * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.\n     */\n    MDCList.prototype.initializeListType = function () {\n        var _this = this;\n        var checkboxListItems = this.root_.querySelectorAll(constants_1.strings.ARIA_ROLE_CHECKBOX_SELECTOR);\n        var singleSelectedListItem = this.root_.querySelector(\"\\n      .\" + constants_1.cssClasses.LIST_ITEM_ACTIVATED_CLASS + \",\\n      .\" + constants_1.cssClasses.LIST_ITEM_SELECTED_CLASS + \"\\n    \");\n        var radioSelectedListItem = this.root_.querySelector(constants_1.strings.ARIA_CHECKED_RADIO_SELECTOR);\n        if (checkboxListItems.length) {\n            var preselectedItems = this.root_.querySelectorAll(constants_1.strings.ARIA_CHECKED_CHECKBOX_SELECTOR);\n            this.selectedIndex = [].map.call(preselectedItems, function (listItem) {\n                return _this.listElements.indexOf(listItem);\n            });\n        } else if (singleSelectedListItem) {\n            if (singleSelectedListItem.classList.contains(constants_1.cssClasses.LIST_ITEM_ACTIVATED_CLASS)) {\n                this.foundation_.setUseActivatedClass(true);\n            }\n            this.singleSelection = true;\n            this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);\n        } else if (radioSelectedListItem) {\n            this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);\n        }\n    };\n    MDCList.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClassForElementIndex: function addClassForElementIndex(index, className) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.classList.add(className);\n                }\n            },\n            focusItemAtIndex: function focusItemAtIndex(index) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.focus();\n                }\n            },\n            getAttributeForElementIndex: function getAttributeForElementIndex(index, attr) {\n                return _this.listElements[index].getAttribute(attr);\n            },\n            getFocusedElementIndex: function getFocusedElementIndex() {\n                return _this.listElements.indexOf(document.activeElement);\n            },\n            getListItemCount: function getListItemCount() {\n                return _this.listElements.length;\n            },\n            hasCheckboxAtIndex: function hasCheckboxAtIndex(index) {\n                var listItem = _this.listElements[index];\n                return !!listItem.querySelector(constants_1.strings.CHECKBOX_SELECTOR);\n            },\n            hasRadioAtIndex: function hasRadioAtIndex(index) {\n                var listItem = _this.listElements[index];\n                return !!listItem.querySelector(constants_1.strings.RADIO_SELECTOR);\n            },\n            isCheckboxCheckedAtIndex: function isCheckboxCheckedAtIndex(index) {\n                var listItem = _this.listElements[index];\n                var toggleEl = listItem.querySelector(constants_1.strings.CHECKBOX_SELECTOR);\n                return toggleEl.checked;\n            },\n            isFocusInsideList: function isFocusInsideList() {\n                return _this.root_.contains(document.activeElement);\n            },\n            notifyAction: function notifyAction(index) {\n                _this.emit(constants_1.strings.ACTION_EVENT, { index: index }, /** shouldBubble */true);\n            },\n            removeClassForElementIndex: function removeClassForElementIndex(index, className) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.classList.remove(className);\n                }\n            },\n            setAttributeForElementIndex: function setAttributeForElementIndex(index, attr, value) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.setAttribute(attr, value);\n                }\n            },\n            setCheckedCheckboxOrRadioAtIndex: function setCheckedCheckboxOrRadioAtIndex(index, isChecked) {\n                var listItem = _this.listElements[index];\n                var toggleEl = listItem.querySelector(constants_1.strings.CHECKBOX_RADIO_SELECTOR);\n                toggleEl.checked = isChecked;\n                var event = document.createEvent('Event');\n                event.initEvent('change', true, true);\n                toggleEl.dispatchEvent(event);\n            },\n            setTabIndexForListItemChildren: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {\n                var element = _this.listElements[listItemIndex];\n                var listItemChildren = [].slice.call(element.querySelectorAll(constants_1.strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));\n                listItemChildren.forEach(function (el) {\n                    return el.setAttribute('tabindex', tabIndexValue);\n                });\n            }\n        };\n        return new foundation_1.MDCListFoundation(adapter);\n    };\n    /**\n     * Used to figure out which list item this event is targetting. Or returns -1 if\n     * there is no list item\n     */\n    MDCList.prototype.getListItemIndex_ = function (evt) {\n        var eventTarget = evt.target;\n        var nearestParent = index_1.ponyfill.closest(eventTarget, \".\" + constants_1.cssClasses.LIST_ITEM_CLASS + \", .\" + constants_1.cssClasses.ROOT);\n        // Get the index of the element if it is a list item.\n        if (nearestParent && index_1.ponyfill.matches(nearestParent, \".\" + constants_1.cssClasses.LIST_ITEM_CLASS)) {\n            return this.listElements.indexOf(nearestParent);\n        }\n        return -1;\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to the foundation.\n     */\n    MDCList.prototype.handleFocusInEvent_ = function (evt) {\n        var index = this.getListItemIndex_(evt);\n        this.foundation_.handleFocusIn(evt, index);\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to the foundation.\n     */\n    MDCList.prototype.handleFocusOutEvent_ = function (evt) {\n        var index = this.getListItemIndex_(evt);\n        this.foundation_.handleFocusOut(evt, index);\n    };\n    /**\n     * Used to figure out which element was focused when keydown event occurred before sending the event to the\n     * foundation.\n     */\n    MDCList.prototype.handleKeydownEvent_ = function (evt) {\n        var index = this.getListItemIndex_(evt);\n        var target = evt.target;\n        if (index >= 0) {\n            this.foundation_.handleKeydown(evt, target.classList.contains(constants_1.cssClasses.LIST_ITEM_CLASS), index);\n        }\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to the foundation.\n     */\n    MDCList.prototype.handleClickEvent_ = function (evt) {\n        var index = this.getListItemIndex_(evt);\n        var target = evt.target;\n        // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n        var toggleCheckbox = !index_1.ponyfill.matches(target, constants_1.strings.CHECKBOX_RADIO_SELECTOR);\n        this.foundation_.handleClick(index, toggleCheckbox);\n    };\n    return MDCList;\n}(component_1.MDCComponent);\nexports.MDCList = MDCList;\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }result[\"default\"] = mod;\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ponyfill = __importStar(__webpack_require__(4));\nexports.ponyfill = ponyfill;\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\nfunction closest(element, selector) {\n    if (element.closest) {\n        return element.closest(selector);\n    }\n    var el = element;\n    while (el) {\n        if (matches(el, selector)) {\n            return el;\n        }\n        el = el.parentElement;\n    }\n    return null;\n}\nexports.closest = closest;\nfunction matches(element, selector) {\n    var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;\n    return nativeMatches.call(element, selector);\n}\nexports.matches = matches;\n\n/***/ }),\n\n/***/ 45:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __extends = this && this.__extends || function () {\n    var _extendStatics = function extendStatics(d, b) {\n        _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n        } || function (d, b) {\n            for (var p in b) {\n                if (b.hasOwnProperty(p)) d[p] = b[p];\n            }\n        };\n        return _extendStatics(d, b);\n    };\n    return function (d, b) {\n        _extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = this && this.__assign || function () {\n    __assign = Object.assign || function (t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) {\n                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar foundation_1 = __webpack_require__(0);\nvar constants_1 = __webpack_require__(124);\nvar MDCDismissibleDrawerFoundation = /** @class */function (_super) {\n    __extends(MDCDismissibleDrawerFoundation, _super);\n    function MDCDismissibleDrawerFoundation(adapter) {\n        var _this = _super.call(this, __assign({}, MDCDismissibleDrawerFoundation.defaultAdapter, adapter)) || this;\n        _this.animationFrame_ = 0;\n        _this.animationTimer_ = 0;\n        return _this;\n    }\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"strings\", {\n        get: function get() {\n            return constants_1.strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"cssClasses\", {\n        get: function get() {\n            return constants_1.cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"defaultAdapter\", {\n        get: function get() {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function addClass() {\n                    return undefined;\n                },\n                removeClass: function removeClass() {\n                    return undefined;\n                },\n                hasClass: function hasClass() {\n                    return false;\n                },\n                elementHasClass: function elementHasClass() {\n                    return false;\n                },\n                notifyClose: function notifyClose() {\n                    return undefined;\n                },\n                notifyOpen: function notifyOpen() {\n                    return undefined;\n                },\n                saveFocus: function saveFocus() {\n                    return undefined;\n                },\n                restoreFocus: function restoreFocus() {\n                    return undefined;\n                },\n                focusActiveNavigationItem: function focusActiveNavigationItem() {\n                    return undefined;\n                },\n                trapFocus: function trapFocus() {\n                    return undefined;\n                },\n                releaseFocus: function releaseFocus() {\n                    return undefined;\n                }\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCDismissibleDrawerFoundation.prototype.destroy = function () {\n        if (this.animationFrame_) {\n            cancelAnimationFrame(this.animationFrame_);\n        }\n        if (this.animationTimer_) {\n            clearTimeout(this.animationTimer_);\n        }\n    };\n    MDCDismissibleDrawerFoundation.prototype.open = function () {\n        var _this = this;\n        if (this.isOpen() || this.isOpening() || this.isClosing()) {\n            return;\n        }\n        this.adapter_.addClass(constants_1.cssClasses.OPEN);\n        this.adapter_.addClass(constants_1.cssClasses.ANIMATE);\n        // Wait a frame once display is no longer \"none\", to establish basis for animation\n        this.runNextAnimationFrame_(function () {\n            _this.adapter_.addClass(constants_1.cssClasses.OPENING);\n        });\n        this.adapter_.saveFocus();\n    };\n    MDCDismissibleDrawerFoundation.prototype.close = function () {\n        if (!this.isOpen() || this.isOpening() || this.isClosing()) {\n            return;\n        }\n        this.adapter_.addClass(constants_1.cssClasses.CLOSING);\n    };\n    /**\n     * @return true if drawer is in open state.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isOpen = function () {\n        return this.adapter_.hasClass(constants_1.cssClasses.OPEN);\n    };\n    /**\n     * @return true if drawer is animating open.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isOpening = function () {\n        return this.adapter_.hasClass(constants_1.cssClasses.OPENING) || this.adapter_.hasClass(constants_1.cssClasses.ANIMATE);\n    };\n    /**\n     * @return true if drawer is animating closed.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isClosing = function () {\n        return this.adapter_.hasClass(constants_1.cssClasses.CLOSING);\n    };\n    /**\n     * Keydown handler to close drawer when key is escape.\n     */\n    MDCDismissibleDrawerFoundation.prototype.handleKeydown = function (evt) {\n        var keyCode = evt.keyCode,\n            key = evt.key;\n        var isEscape = key === 'Escape' || keyCode === 27;\n        if (isEscape) {\n            this.close();\n        }\n    };\n    /**\n     * Handles a transition end event on the root element.\n     */\n    MDCDismissibleDrawerFoundation.prototype.handleTransitionEnd = function (evt) {\n        var OPENING = constants_1.cssClasses.OPENING,\n            CLOSING = constants_1.cssClasses.CLOSING,\n            OPEN = constants_1.cssClasses.OPEN,\n            ANIMATE = constants_1.cssClasses.ANIMATE,\n            ROOT = constants_1.cssClasses.ROOT;\n        // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.\n        var isRootElement = this.isElement_(evt.target) && this.adapter_.elementHasClass(evt.target, ROOT);\n        if (!isRootElement) {\n            return;\n        }\n        if (this.isClosing()) {\n            this.adapter_.removeClass(OPEN);\n            this.closed_();\n            this.adapter_.restoreFocus();\n            this.adapter_.notifyClose();\n        } else {\n            this.adapter_.focusActiveNavigationItem();\n            this.opened_();\n            this.adapter_.notifyOpen();\n        }\n        this.adapter_.removeClass(ANIMATE);\n        this.adapter_.removeClass(OPENING);\n        this.adapter_.removeClass(CLOSING);\n    };\n    /**\n     * Extension point for when drawer finishes open animation.\n     */\n    MDCDismissibleDrawerFoundation.prototype.opened_ = function () {}; // tslint:disable-line:no-empty\n    /**\n     * Extension point for when drawer finishes close animation.\n     */\n    MDCDismissibleDrawerFoundation.prototype.closed_ = function () {}; // tslint:disable-line:no-empty\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n     */\n    MDCDismissibleDrawerFoundation.prototype.runNextAnimationFrame_ = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame_);\n        this.animationFrame_ = requestAnimationFrame(function () {\n            _this.animationFrame_ = 0;\n            clearTimeout(_this.animationTimer_);\n            _this.animationTimer_ = setTimeout(callback, 0);\n        });\n    };\n    MDCDismissibleDrawerFoundation.prototype.isElement_ = function (element) {\n        // In Edge, transitionend on ripple pseudo-elements yields a target without classList.\n        return Boolean(element.classList);\n    };\n    return MDCDismissibleDrawerFoundation;\n}(foundation_1.MDCFoundation);\nexports.MDCDismissibleDrawerFoundation = MDCDismissibleDrawerFoundation;\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexports.default = MDCDismissibleDrawerFoundation;\n\n/***/ }),\n\n/***/ 66:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar focus_trap_1 = __importDefault(__webpack_require__(67));\nfunction createFocusTrapInstance(surfaceEl, focusTrapFactory) {\n    if (focusTrapFactory === void 0) {\n        focusTrapFactory = focus_trap_1.default;\n    }\n    return focusTrapFactory(surfaceEl, {\n        clickOutsideDeactivates: true,\n        escapeDeactivates: false,\n        initialFocus: undefined,\n        returnFocusOnDeactivate: false\n    });\n}\nexports.createFocusTrapInstance = createFocusTrapInstance;\n\n/***/ }),\n\n/***/ 67:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar tabbable = __webpack_require__(121);\nvar xtend = __webpack_require__(122);\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n\n\n/***/ }),\n\n/***/ 68:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __extends = this && this.__extends || function () {\n    var _extendStatics = function extendStatics(d, b) {\n        _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n        } || function (d, b) {\n            for (var p in b) {\n                if (b.hasOwnProperty(p)) d[p] = b[p];\n            }\n        };\n        return _extendStatics(d, b);\n    };\n    return function (d, b) {\n        _extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar foundation_1 = __webpack_require__(45);\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCModalDrawerFoundation = /** @class */function (_super) {\n    __extends(MDCModalDrawerFoundation, _super);\n    function MDCModalDrawerFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Handles click event on scrim.\n     */\n    MDCModalDrawerFoundation.prototype.handleScrimClick = function () {\n        this.close();\n    };\n    /**\n     * Called when drawer finishes open animation.\n     */\n    MDCModalDrawerFoundation.prototype.opened_ = function () {\n        this.adapter_.trapFocus();\n    };\n    /**\n     * Called when drawer finishes close animation.\n     */\n    MDCModalDrawerFoundation.prototype.closed_ = function () {\n        this.adapter_.releaseFocus();\n    };\n    return MDCModalDrawerFoundation;\n}(foundation_1.MDCDismissibleDrawerFoundation);\nexports.MDCModalDrawerFoundation = MDCModalDrawerFoundation;\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexports.default = MDCModalDrawerFoundation;\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=mdc.drawer.js.map"],"mappings":"AAKA","sourceRoot":""}